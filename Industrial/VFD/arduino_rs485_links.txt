https://microdigisoft.com/rs-485-serial-communication-between-two-arduino/	--> 	ima primer Master - Slave komunikacije preko dva arduina (sa servo motorom)
https://www.youtube.com/watch?v=k4guG5-6Mu0 	--> yt video prethodnog primera

*********************************************************+

https://embeddedthere.com/how-to-interface-arduino-with-rs485-modbus-protocol-using-max485-module/	-->	primer Master - Slave sa dva arduina (sa prekidacem koji pali lampicu)

******************************************************************


https://microdigisoft.com/esp32-with-modbus-rtu-rs485-protocol-using-arduino-ide/ 	--> 	ovo je vezano za neki drugi projekat, spajanje sa TV-om, ali ima lepo objasnjenje o Modbus-u

********************************************************

https://www.modbus.org/		--> 	stranica o Modbus-u (opste)

********************************************************

https://www.youtube.com/watch?v=nQ4aCfAm0aU	-->	Modbus Register/Example of Master(PC) - Slave(device)

**********************************************************

https://www.electronicscomp.com/max485-ttl-to-rs485-converter-module	--> 	donglica koju koristimo (shop verzija sa karakteristikama)

********************************************************

http://ulasdikme.com/2016/08/21/arduino-modbus-example/		--> Modbus Slave primer (arduino i PC, bez RS485)
https://www.youtube.com/watch?v=dvjNLzcA8xE		--> Isto Modbus Slave primer

**********************************************

https://www.youtube.com/watch?v=ZR9QEWpGEDo	-->	Arduino Uno i Arduino Nano - Master Slave Example

*************************************************

https://www.youtube.com/watch?v=8XfRKpzkI2k	--> Arduino As Master - Modbus RTU RS485
https://circuitdigest.com/microcontroller-projects/rs-485-modbus-serial-communication-with-arduino-as-master		--> Arduino As Master - Sajt + objasnjenje
https://circuitdigest.com/microcontroller-projects/rs485-modbus-serial-communication-using-arduino-uno-as-slave		--> Arduino As Slave - Sajt + objasnjenje


***************************************************

https://github.com/multiopti/teaching/blob/master/README.md	-->	neki git za ucenje, nmp

******************************************************

https://www.youtube.com/watch?v=VwPMm-v3970	-->	primer: dva Arduina kao Master-Slave (bez Modbus protokola)

******************************************************
USB to TTL Arduino:
  https://www.youtube.com/watch?v=MUg3Mac-mKE&ab_channel=Brainergiser
  https://forum.arduino.cc/t/serial-read-from-ev-chargers-modbus/1151534/19

https://www.youtube.com/watch?v=csk0JedtN7Y	-->	primer: ocitavanje temperature uz pomoc dva senzora (dve razlicite adrese)

https://github.com/4-20ma/ModbusMaster/blob/master/examples/RS485_HalfDuplex/RS485_HalfDuplex.ino	-->	GIT: Master-Slave

***************************************************************************

Modbus protocol can be implemented using UART with the help of RS485 or RS232 connectors(need not be these 2 always), this again depends upon the type of slave . In this protocol, the slave will respond only if the master sends a correct query to the slave. To get different parameters of slave there will be different queries . Below is an example Query sent by the master and response from slave.

Here am sending the query using a for loop and writing on to serial buffer . You can even send the query like - 01030F4800024709

Test query = {0x01, 0x03, 0x0F, 0x48, 0x00, 0x02, 0x47, 0x09};

0x01 - Slave ID

0x03 - Function code

0x0F - Starting Address High

0x48 - Starting address Low

0x00 - Quantity of registers High

0x02 - Quantity of registers Low

0x47 - CRC High (Calculated)

0x09 - CRC Low (Calculated)

The following data is received from the slave. If the calculated checksum matches with the CRC from the received buffer, the data is stored in RESULT(a variable).

Response: RESULT - {0x01, 0x03, 0x04, 0x77, 0xAB, 0x23, 0xB8, 0x89, 0x25}

0x01 - Slave ID

0x03 - Function code

0x04 - No. of bytes of response

0x77, 0xAB, 0x23, 0xB8 - Data sent by the slave

0x89, 0x25 - Received checksum

8.6K viewsView upvotes

*******************************************************************************************

https://www.youtube.com/watch?v=XicxOsAhCv0 finalno
